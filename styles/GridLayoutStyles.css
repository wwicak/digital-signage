.react-grid-layout {
  position: relative;
  transition: height 200ms ease;
}

.react-grid-item {
  transition: all 150ms cubic-bezier(0.2, 0, 0.2, 1);
  transition-property: left, top, width, height;
  will-change: auto;
}

.react-grid-item.cssTransforms {
  transition-property: transform, width, height;
  transition-timing-function: cubic-bezier(0.2, 0, 0.2, 1);
}

.react-grid-item.resizing {
  z-index: 1;
  will-change: width, height, transform;
  transition: none;
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  will-change: transform;
  transform-origin: center;
}

/* Improved performance for dragging */
.react-grid-item.react-draggable-dragging * {
  pointer-events: none;
  user-select: none;
}

/* Smooth transitions when not dragging */
.react-grid-item:not(.react-draggable-dragging):not(.resizing) {
  transition: transform 150ms cubic-bezier(0.2, 0, 0.2, 1);
}

.react-grid-item.react-grid-placeholder {
  background: linear-gradient(135deg, rgba(123, 192, 67, 0.3), rgba(123, 192, 67, 0.1));
  border: 2px dashed rgba(123, 192, 67, 0.5);
  border-radius: 8px;
  opacity: 0.8;
  transition: all 100ms cubic-bezier(0.2, 0, 0.2, 1);
  z-index: 2;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
  backdrop-filter: blur(2px);
}

/* Resize handles for all directions */
.react-grid-item > .react-resizable-handle {
  position: absolute;
  background: none;
  opacity: 0;
  transition: opacity 200ms ease;
  z-index: 10;
}

/* Southeast handle (bottom-right) */
.react-grid-item > .react-resizable-handle.react-resizable-handle-se {
  width: 24px;
  height: 24px;
  bottom: 0;
  right: 0;
  cursor: se-resize;
}

/* Southwest handle (bottom-left) */
.react-grid-item > .react-resizable-handle.react-resizable-handle-sw {
  width: 24px;
  height: 24px;
  bottom: 0;
  left: 0;
  cursor: sw-resize;
}

/* Northeast handle (top-right) */
.react-grid-item > .react-resizable-handle.react-resizable-handle-ne {
  width: 24px;
  height: 24px;
  top: 0;
  right: 0;
  cursor: ne-resize;
}

/* Northwest handle (top-left) */
.react-grid-item > .react-resizable-handle.react-resizable-handle-nw {
  width: 24px;
  height: 24px;
  top: 0;
  left: 0;
  cursor: nw-resize;
}

/* South handle (bottom) */
.react-grid-item > .react-resizable-handle.react-resizable-handle-s {
  width: 100%;
  height: 8px;
  bottom: 0;
  left: 0;
  cursor: s-resize;
}

/* North handle (top) */
.react-grid-item > .react-resizable-handle.react-resizable-handle-n {
  width: 100%;
  height: 8px;
  top: 0;
  left: 0;
  cursor: n-resize;
}

/* East handle (right) */
.react-grid-item > .react-resizable-handle.react-resizable-handle-e {
  width: 8px;
  height: 100%;
  top: 0;
  right: 0;
  cursor: e-resize;
}

/* West handle (left) */
.react-grid-item > .react-resizable-handle.react-resizable-handle-w {
  width: 8px;
  height: 100%;
  top: 0;
  left: 0;
  cursor: w-resize;
}

.react-grid-item:hover > .react-resizable-handle {
  opacity: 1;
}

/* Visual indicators for corner handles */
.react-grid-item > .react-resizable-handle.react-resizable-handle-se::after,
.react-grid-item > .react-resizable-handle.react-resizable-handle-sw::after,
.react-grid-item > .react-resizable-handle.react-resizable-handle-ne::after,
.react-grid-item > .react-resizable-handle.react-resizable-handle-nw::after {
  content: '';
  position: absolute;
  width: 8px;
  height: 8px;
  border-radius: 2px;
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-se::after {
  right: 6px;
  bottom: 6px;
  border-right: 3px solid rgba(123, 192, 67, 0.8);
  border-bottom: 3px solid rgba(123, 192, 67, 0.8);
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-sw::after {
  left: 6px;
  bottom: 6px;
  border-left: 3px solid rgba(123, 192, 67, 0.8);
  border-bottom: 3px solid rgba(123, 192, 67, 0.8);
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-ne::after {
  right: 6px;
  top: 6px;
  border-right: 3px solid rgba(123, 192, 67, 0.8);
  border-top: 3px solid rgba(123, 192, 67, 0.8);
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-nw::after {
  left: 6px;
  top: 6px;
  border-left: 3px solid rgba(123, 192, 67, 0.8);
  border-top: 3px solid rgba(123, 192, 67, 0.8);
}

.react-grid-item.resizing > .react-resizable-handle::after {
  border-color: rgba(123, 192, 67, 1) !important;
}

/* Performance optimizations */
.react-grid-layout * {
  box-sizing: border-box;
}

/* Disable text selection during drag */
.react-grid-layout.dragging {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

/* GPU acceleration for better performance */
.react-grid-item {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Touch device optimizations */
@media (hover: none) and (pointer: coarse) {
  .react-grid-item > .react-resizable-handle {
    width: 32px;
    height: 32px;
    opacity: 0.7;
  }

  .react-grid-item > .react-resizable-handle::after {
    width: 12px;
    height: 12px;
    border-width: 4px;
  }

  .react-grid-item {
    touch-action: none;
  }

  /* Show controls on touch devices */
  .touch\:opacity-100 {
    opacity: 1 !important;
  }

  /* Larger touch targets */
  .controls button {
    min-width: 44px;
    min-height: 44px;
  }
}

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  .react-grid-item {
    transition: none !important;
  }

  .react-grid-item.react-grid-placeholder {
    transition: none !important;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .react-grid-item.react-grid-placeholder {
    border-color: currentColor;
    background: transparent;
  }

  .react-grid-item > .react-resizable-handle::after {
    border-color: currentColor;
  }
}

/* Dark mode optimizations */
@media (prefers-color-scheme: dark) {
  .react-grid-item.react-grid-placeholder {
    background: linear-gradient(135deg, rgba(123, 192, 67, 0.2), rgba(123, 192, 67, 0.05));
    border-color: rgba(123, 192, 67, 0.4);
  }
}

/* Boundary indicators */
.react-grid-item.at-boundary {
  box-shadow: 0 0 0 2px rgba(123, 192, 67, 0.3);
}

.react-grid-item.boundary-violation {
  box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.5);
  animation: boundary-pulse 1s ease-in-out infinite;
}

@keyframes boundary-pulse {
  0%, 100% {
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.5);
  }
  50% {
    box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.3);
  }
}

/* Improved drag feedback */
.react-grid-item.react-draggable-dragging {
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  transform: rotate(2deg) scale(1.02);
}

.react-grid-item.resizing {
  box-shadow: 0 4px 15px rgba(123, 192, 67, 0.3);
}

/* Auto-arrange animation */
.react-grid-layout.auto-arranging .react-grid-item {
  transition: all 500ms cubic-bezier(0.2, 0, 0.2, 1) !important;
}

/* Widget controls visibility */
.react-grid-item .controls {
  opacity: 0;
  transition: opacity 200ms ease;
  pointer-events: auto;
}

.react-grid-item:hover .controls,
.react-grid-item:focus-within .controls {
  opacity: 1;
}

/* Ensure controls don't interfere with dragging */
.react-grid-item .controls.no-drag {
  pointer-events: auto;
}

.react-grid-item.react-draggable-dragging .controls {
  pointer-events: none;
}

/* Improve drag cursor */
.react-grid-item {
  cursor: grab;
}

.react-grid-item:active {
  cursor: grabbing;
}

.react-grid-item.react-draggable-dragging {
  cursor: grabbing !important;
}

/* Ensure resize handles are above other content */
.react-grid-item > .react-resizable-handle {
  z-index: 20;
}

/* Prevent text selection during drag operations */
.react-grid-layout.dragging,
.react-grid-layout.dragging * {
  user-select: none !important;
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
}
